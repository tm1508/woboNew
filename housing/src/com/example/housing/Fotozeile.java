package com.example.housing;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.List;

import javax.imageio.ImageIO;
import javax.imageio.stream.ImageInputStream;

import com.example.housing.data.model.Offer;
import com.example.housing.data.model.Photo;
import com.example.housing.data.provider.OfferProvider;
import com.example.housing.data.provider.PhotoProvider;
import com.example.housing.utility.Format;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.Buffered;
import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.server.FileResource;
import com.vaadin.server.Resource;
import com.vaadin.server.StreamResource;
import com.vaadin.server.VaadinService;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextField;
import com.vaadin.ui.UI;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Button.ClickEvent;

// TODO: Auto-generated Javadoc
/**
 * The Class Listenzeile.
 */
public class Fotozeile extends CustomComponent {

	/** The main layout. */
	@AutoGenerated
	private VerticalLayout mainLayout;

	/**
	 * The constructor should first build the main layout, set the composition
	 * root and then do any custom initialization.
	 * 
	 * The constructor will not be automatically regenerated by the visual
	 * editor.
	 *
	 * @param o the o
	 */
	public Fotozeile(final Photo p, final Offer angebot) {
		buildMainLayout();
		setCompositionRoot(mainLayout);

	
		HorizontalLayout ergebnisLayout = new HorizontalLayout();
		ergebnisLayout.setMargin(true);
		ergebnisLayout.setHeight("100px");

	
			
			StreamResource resource = new StreamResource(new StreamResource.StreamSource() {
				@Override
				public InputStream getStream(){
					InputStream bais = new ByteArrayInputStream(p.getPicture());
					return bais;
				}
												
			}, "Bild_1");
			resource.setCacheTime(0);
						
			Image image = new Image(null, resource);
			image.setHeight("80px"); //100% der Listenzeilen-Höhe
			image.setWidth("80px");
			image.markAsDirty();
	
		
			ergebnisLayout.addComponent(image);
			
			Button b = new Button("Dieses Bild löschen");
			ergebnisLayout.addComponent(b);
			
			b.addClickListener(new Button.ClickListener() {
				public void buttonClick(ClickEvent event) {
					PhotoProvider pp = new PhotoProvider();
					pp.removePhoto(p);
					
					int id = angebot.getIdOffer();
					OfferProvider op  = new OfferProvider();
					Offer o = op.find(id);
					String name = "AngebotErstellen";
					getUI().getNavigator().addView(name, new AngebotErstellen(o)); // momentan angezeigtes Angebot soll übergeben werden...
					getUI().getNavigator().navigateTo(name);
				}
			});
	
		
			


		

		mainLayout.addComponent(ergebnisLayout);

	}

	/**
	 * Builds the main layout.
	 *
	 * @return the vertical layout
	 */
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);

		mainLayout.setMargin(false);

		return mainLayout;

	}

}
