package com.example.housing;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.InputStream;
import java.util.Date;
import java.util.List;

import com.example.housing.data.model.Offer;
import com.example.housing.data.model.Photo;
import com.example.housing.utility.Format;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.server.FileResource;
import com.vaadin.server.FontAwesome;
import com.vaadin.server.StreamResource;
import com.vaadin.server.VaadinService;
import com.vaadin.shared.ui.label.ContentMode;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Image;
import com.vaadin.ui.Label;
import com.vaadin.ui.VerticalLayout;

public class Listenzeile extends CustomComponent {
	private static final long serialVersionUID = 1L;

	private VerticalLayout mainLayout;

	public Listenzeile(final Offer o) {
		buildMainLayout();
		setCompositionRoot(mainLayout);
	
		GridLayout ergebnisLayout = new GridLayout(6, 3);
		ergebnisLayout.setMargin(false);
		ergebnisLayout.addStyleName("Listenzeile");
		ergebnisLayout.setSizeFull();
		ergebnisLayout.setHeight("150px");

		// pictures
		final List<Photo> pictures;
		pictures = o.getPhotos();
		
		// falls Bilder zu der Wohnung vorhanden sind
		if (pictures.size() > 0) {
			
			StreamResource resource = new StreamResource(new StreamResource.StreamSource() {
				private static final long serialVersionUID = 1L;

				@Override
				public InputStream getStream(){
					InputStream bais = new ByteArrayInputStream(pictures.get(0).getPicture());
					return bais;
				}
												
			}, "Bild_1");
			resource.setCacheTime(0);
			VerticalLayout imageLayout = new VerticalLayout();
			
			Image image = new Image(null, resource);
			image.setHeight("146px"); //100% der Listenzeilen-Höhe
			image.setWidth("170px");
			image.markAsDirty();
			imageLayout.addComponent(image);
			ergebnisLayout.addComponent(imageLayout, 0, 0, 2, 2);
			
			Component c = ergebnisLayout.getComponent(0, 2);
			c.setHeight("100%");
			c.setWidth("70%");
			
		} else {
			
			VerticalLayout imageLayout = new VerticalLayout();
			String basepath = VaadinService.getCurrent().getBaseDirectory().getAbsolutePath();
			FileResource resource = new FileResource(new File(basepath + "/WEB-INF/image/DefaultBild.jpg"));
			Image image = new Image(null, resource);
			image.setWidth("146px");
			image.setHeight("146px");
			imageLayout.addComponent(image);
			ergebnisLayout.addComponent(imageLayout, 0, 0, 2, 2);
			Component c = ergebnisLayout.getComponent(0, 2);
			c.setWidth("100%");
			c.setHeight("70%");
			
		}

		String title = o.getTitle();
		VerticalLayout ueberschrift = new VerticalLayout();
		
		Label l = new Label("ID " + o.getIdOffer() + ": " + title + " in " + o.getCity());
		l.addStyleName("ImportantTitle");
		l.setWidth("100%");
		l.setHeight("20%");
		ueberschrift.addComponent(l);
		if(o.isInactive()){
			Label warn = new Label(FontAwesome.WARNING.getHtml() + "&nbsp;", ContentMode.HTML);
			warn.addStyleName("redText");
			Label inactive= new Label("   Achtung: Dieses Angebot ist deaktiviert!");
			inactive.addStyleName("redText");
			
			HorizontalLayout warnInactive = new HorizontalLayout();
			warnInactive.addComponent(warn);
			warnInactive.addComponent(inactive);
			ueberschrift.addComponent(warnInactive);
		}
		ergebnisLayout.addComponent(ueberschrift, 3, 0, 5, 0);

		Label l2 = new Label("Warmmiete: " + Format.euroFormat(o.getPrice()) + " €");
		l2.setWidth("110px");
		ergebnisLayout.addComponent(l2, 3, 1);

		float sm = o.getSquareMetre();
		String sSm = "Größe: " + Format.stringFormat(sm) + " m²";
		Label lsm = new Label(sSm);
		lsm.setWidth("110px");
		ergebnisLayout.addComponent(lsm, 4, 1);

		int a = o.getType();
		String s;
		if (a == 3) {
			s = "Art: WG";
		} else if (a == 1) {
			s = "Art: Wohnung";
		} else if (a == 2) {
			s = "Art: Zimmer";
		} else {
			s = "";
		}
		Label ls = new Label(s);
		ls.setWidth("100px");
		ergebnisLayout.addComponent(ls, 5, 1);

	
		Date start = (java.util.Date) o.getStartDate();
		String dateS = Format.dateFormat(start);
		ergebnisLayout.addComponent(new Label("Startdatum: " +  dateS ), 3, 2);

		try {
			Date end = (java.util.Date) o.getEndDate();
			String dateSs = Format.dateFormat(end);
			ergebnisLayout.addComponent(new Label("Enddatum: " + dateSs), 5, 2);
		} catch (Exception e) {//tut nichts, da Enddatum keine Muss-Angabe ist
		}
		
		ergebnisLayout.addLayoutClickListener(new LayoutClickListener() {
			private static final long serialVersionUID = 1L;

			public void layoutClick(LayoutClickEvent event) {
				String name = "Einzelansicht";
				getUI().getNavigator().addView(name, new Einzelansicht(o));
				getUI().getNavigator().navigateTo(name);
			}
		});

		mainLayout.addComponent(ergebnisLayout);
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setMargin(false);
		return mainLayout;
	}
}
